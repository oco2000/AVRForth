\ ========== EERTOS based on DiHalt's routines (easyelectronics.ru)
\ Minimal F_CPU = 1MHz

@DECIMAL

0x8 == QueueSize            \ 8 task queue
QueueSize CELLS == bQueueSize
\ Task queue
CREATE Tasks bQueueSize ALLOT
\ counters
CREATE Timers bQueueSize ALLOT

: [] ( i addr1 -- addr2 )
  SWAP CELLS +
;

\ RTOS run the system timer
: RTOS_RUN ( -- )
  RTOS_INIT_TIMER
  sei
;

: IDLE ( -- )   ;

\ RTOS init - clear the queues
: RTOS_INIT ( -- )
  Tasks bQueueSize ERASE
  Timers bQueueSize ERASE
;

: RTOS_TASK_IN_QUEUE ( task -- -1 | index ) \ if the task is in the queue - return its index, -1 if not found
  QueueSize BEGIN \ task index+1
    1- 2DUP Tasks [] @ =
    IF  ( task index )
      NIP EXIT  ( index )
    THEN
  [UNTIL<>0]
  NIP 1-
;

\ Set timer task
\ time is in timer ticks
: RTOS_SET_TIMER_TASK ( task time -- )
  SREG@ cli >R
  OVER RTOS_TASK_IN_QUEUE DUP -1 = IF  \ no this task in the queue
    DROP ( task time ) \ add to queue
    0 RTOS_TASK_IN_QUEUE DUP -1 = IF  \ find free space in the queue
      DROP 2DROP \ no empty space
    ELSE ( task time index ) \ add to the empty place in the queue
      TUCK ( task index time index )
      Timers [] ! Tasks [] !
    THEN
  ELSE    ( task time index )     \ there is this task
    Timers [] ! DROP            \ set its timer value
  THEN
  R> SREG!
;

: RTOS_SET_TASK ( task -- )          \ set a task to execute immediately
  0 RTOS_SET_TIMER_TASK
;

: RTOS_REMOVE_TASK ( task -- )      \ remove the task from the queue
  RTOS_TASK_IN_QUEUE DUP -1 = IF
    DROP
  ELSE
    Tasks [] OFF
  THEN
;

\ =================================================================================
\ Task manager. It finds a suitable task and executes it

: RTOS_TASK_MANAGER ( -- )
  SREG@ cli
  QueueSize BEGIN \ index+1
    1- DUP Tasks [] @ IF \ есть задача в очереди
      DUP Timers [] @ IFNOT \ и у нее выщелкал таймер
        DUP Tasks [] DUP @ SWAP OFF \ ставим на ее место 0
        sei
        EXECUTE \ и выполняем задачу
        DROP SREG! EXIT
      THEN
    THEN
  [UNTIL<>0]
  DROP IDLE
  SREG!
;

\ System timer. It is called once in 1ms.

: RTOS_TIMER_SERVICE ( -- )
  Timers
  [
    QueueSize tmp1l ldi
    begin               \ all the timers
      [x]+ zl ld
      [x]+  zh ld
      01 zl sbiw      \ decrement
      if_c            \ 0 is minimum
        zl clr
        zh clr
      then
      zh -[x] st      \ write back
      zl -[x]  st
      02 tosl adiw    \ to the next timer
      tmp1l dec
    until_<>0
    popt
  ]
  RTOS_FIX_TIMER
;

[F] [DEFINED] !RTOS_CUSTOM_INT INVERT [P] [IF]

  INT: RTOS_INT
    RTOS_TIMER_SERVICE
  ;INT

  \ set the timer interrupt to the timer service
  RTOS_INT RTOS_TIMER_INTERRUPT INT!

[THEN]

BASE!
