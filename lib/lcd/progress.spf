\ Progress indication on the LCD
REQUIRE LCD_CHAR lib/lcd/definechar.spf

@BINARY

00010000
00010000
00010000
00011111
00010000
00010000
00010000
00010000
LCD_CHAR PRG1

00011000
00011000
00011000
00011111
00011000
00011000
00011000
00011000
LCD_CHAR PRG2

00011100
00011100
00011100
00011111
00011100
00011100
00011100
00011100
LCD_CHAR PRG3

00011110
00011110
00011110
00011111
00011110
00011110
00011110
00011110
LCD_CHAR PRG4

BASE!

: .CHARS ( n char -- )
  SWAP
  ( ABS 0x10 MIN )
  DUP IF
    BEGIN ( char n )
      OVER EMIT 1-
    [UNTIL<>0]
  THEN 2DROP
;

: SCALE ( min max position -- newmax newposition )
  >R OVER - ( min len \ r: position )
  SWAP R> SWAP- ( max-min pos-min )
;

: CLIP ( value min max -- newvalue )
  ROT MIN MAX
;

\ Draw progressbar of length at x,y
\ Position is clipped between min and max
: PROGRESSBAR ( min max length position x y -- )
  AT SWAP >R ( min max position \ r: length )
  >R 2DUP R> -ROT CLIP ( min max clipped_position \ r: length )
  SCALE ( newmax newposition \ r: length )
  R@ 5 * ROT */ ( scaled_position \ r: length )
  5 /MOD DUP>R ( rest full \ r: length full )
  0xFF .CHARS
  ?DUP IF 1- EMIT R> 1+ >R ( increment number of full chars printed) THEN
  R> R> SWAP- [CHAR] - .CHARS
;

: PROGRESS-INIT \ define custom chars
  0 PRG1
  1 PRG2
  2 PRG3
  3 PRG4
;
