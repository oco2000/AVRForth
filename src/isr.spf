\ Interrupt service routines

\ прерывания с минимальным сохранением регистров
: (ASMINTPROLOG)
  tosl    pushw \ сохранить вершину стека
  [ SREG ] LITERAL tosl lds
  tosl    push  \ и регистр состояния
;

: (ASMINTEPILOG)  \ восстановить все
  tosl    pop
  tosl [ SREG ] LITERAL sts
  tosl    popw
          reti
;

: ASMINT: CREATE T-HERE @ , INLISTING , ]T (ASMINTPROLOG)   \ создать обработчик прерываний
     DOES> @ T-STATE @ IF (CALL) THEN  ;
: ;ASMINT (ASMINTEPILOG) T[ ;           \ завершить

\ прерывание на форте - сохраняем больше регистров
: (INTPROLOG)
  tosl  pushw \ сохранить вершину стека
  wl    pushw   \ временные регистры
  zl    pushw
  tmpl  pushw
  cbl   pushw
  tmp1l pushw
  tmp2l pushw
  [ SREG ] LITERAL tosl lds
  tosl    push  \ и регистр состояния
;

: (INTEPILOG) \ восстановить все
  tosl  pop
  tosl [ SREG ] LITERAL sts
  tmp2l popw
  tmp1l popw
  cbl   popw
  tmpl  popw
  zl    popw
  wl    popw
  tosl  popw
        reti
;

: INT:
  [T] SAVE-INPUT [P]
  CREATE T-HERE @ , ]T (INTPROLOG)   \ создать обработчик прерываний
  DOES> @ T-STATE @ IF (CALL) THEN  ;

: ;INT
  DROP-SAVED-INPUT
  (INTEPILOG) T[ ;           \ завершить

: INTERRUPT         \ вектор прерывания по тек. адресу
  CREATE
    T-HERE @ , INLISTING ,
    reti          \ неинициализированный - возврат из прерывания
    VECTOR-SIZE 4 = IF      \ вектор 4-байтовый
        0x0 T,              \ добавим 2 байта
    THEN
  DOES>
    T-STATE @ IF
    (CALL)          \ скомпилировать вызов
  THEN
;

: ->INT   \ задать обработчик
  ' >BODY
  @ COMPILE-TO (JMP)
;
